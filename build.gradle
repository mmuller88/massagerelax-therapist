buildscript {
	ext {
		kotlinVersion = '1.2.71'
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group = 'damadden88'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}


dependencies {
	compile "io.springfox:springfox-swagger2:2.9.2"
	compile "io.springfox:springfox-swagger-ui:2.9.2"
	compile group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.1.1.RELEASE'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.1.0.RELEASE'
	compile group: 'net.bytebuddy', name: 'byte-buddy', version: '1.9.10'
	implementation('org.springframework.boot:spring-boot-starter')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	runtimeOnly('mysql:mysql-connector-java')
	testImplementation('org.springframework.boot:spring-boot-starter-test')

	compile group: 'org.springframework.boot', name: 'spring-boot-starter'
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
	testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
	testCompile "org.mockito:mockito-core:2.+"
	testCompile('org.mockito:mockito-junit-jupiter:2.18.3')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')

}

task buildDocker(type: Docker, dependsOn: build) {
	push = false
	applicationName = bootJar.baseName
	dockerfile = file('Dockerfile')
	if(customTagVersion != null)
		setTagVersion(customTagVersion)
	else
		setTagVersionToLatest()
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

task releaseDocker(type: Docker, dependsOn: build) {
	push = true
	applicationName = bootJar.baseName
	dockerfile = file('Dockerfile')
	if(customTagVersion != null)
		setTagVersion(customTagVersion)
	else
		setTagVersionToLatest()
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
